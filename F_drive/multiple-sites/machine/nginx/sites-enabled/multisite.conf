map $host $username {
  ~^(?P<user>.+)$ $user;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream socketio {
    server socketio:3000 weight=5;
}

server {
    listen 80;
    listen 3030;
    listen 443 ssl http2;
    server_name localhost;
    root /var/www/$username/public;

    index index.php;

    include conf.d/basic.conf;

    location / {
       # This is cool because no php is touched for static content.
       # include the "?$args" part so non-default permalinks doesn't break when using query string
       try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass    php:9000;
        fastcgi_index   index.php;
        fastcgi_param   SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include         fastcgi_params;
        fastcgi_param   PATH_INFO $fastcgi_path_info;

        # for debugging 1h
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;

        proxy_buffering off;

        proxy_connect_timeout  3600s;
        proxy_send_timeout  3600s;
        proxy_read_timeout  3600s;
        fastcgi_send_timeout 3600s;
        fastcgi_read_timeout 3600s;
    }

    location /socket.io/ {
        proxy_pass http://socketio;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_redirect off;

        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;

    }

}